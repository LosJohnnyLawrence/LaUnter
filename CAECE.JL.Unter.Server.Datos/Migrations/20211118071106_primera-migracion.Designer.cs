// <auto-generated />
using System;
using CAECE.JL.Unter.Server.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CAECE.JL.Unter.Server.Datos.Migrations
{
    [DbContext(typeof(ContextoDatosUnter))]
    [Migration("20211118071106_primera-migracion")]
    partial class primeramigracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MesaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MesaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Estadia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MesaId")
                        .HasColumnType("int");

                    b.Property<int?>("MozoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MesaId");

                    b.HasIndex("MozoId");

                    b.ToTable("Estadias");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.EstadoMesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasFilter("[Nombre] IS NOT NULL");

                    b.ToTable("EstadoMesas");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.EstadoPreparacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasFilter("[Nombre] IS NOT NULL");

                    b.ToTable("EstadosPreparacion");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlatoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SeleccionId")
                        .HasColumnType("int");

                    b.Property<int?>("SeleccionId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlatoId");

                    b.HasIndex("SeleccionId");

                    b.HasIndex("SeleccionId1");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantComensales")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("SectorId");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.MotivoDevolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int?>("SeleccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("SeleccionId");

                    b.ToTable("MotivoDevoluciones");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Mozo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mozos");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadiaId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MesaId")
                        .HasColumnType("int");

                    b.Property<int?>("MozoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadiaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("MesaId");

                    b.HasIndex("MozoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.RestriccionAlimentaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BebidaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlatoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BebidaId");

                    b.HasIndex("PlatoId");

                    b.ToTable("RestriccionAlimentarias");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sectores");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Seleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Selecciones");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.TurnoMozo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("FinTurno")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("InicioTurno")
                        .HasColumnType("time");

                    b.Property<int?>("MozoId")
                        .HasColumnType("int");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MozoId");

                    b.HasIndex("SectorId");

                    b.ToTable("TurnoMozos");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Bebida", b =>
                {
                    b.HasBaseType("CAECE.JL.Unter.Server.Datos.Item");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Bebida");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Ingrediente", b =>
                {
                    b.HasBaseType("CAECE.JL.Unter.Server.Datos.Item");

                    b.Property<int>("CantidadStock")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Plato", b =>
                {
                    b.HasBaseType("CAECE.JL.Unter.Server.Datos.Item");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Plato");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Cliente", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Estadia", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Mozo", "Mozo")
                        .WithMany()
                        .HasForeignKey("MozoId");

                    b.Navigation("Cliente");

                    b.Navigation("Mesa");

                    b.Navigation("Mozo");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Item", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Item", null)
                        .WithMany("Componentes")
                        .HasForeignKey("ItemId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Plato", null)
                        .WithMany("PosiblesExtras")
                        .HasForeignKey("PlatoId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Seleccion", null)
                        .WithMany("Agregar")
                        .HasForeignKey("SeleccionId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Seleccion", null)
                        .WithMany("Sacar")
                        .HasForeignKey("SeleccionId1");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Mesa", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.EstadoMesa", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId");

                    b.Navigation("Estado");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.MotivoDevolucion", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Seleccion", "Seleccion")
                        .WithMany()
                        .HasForeignKey("SeleccionId");

                    b.Navigation("Pedido");

                    b.Navigation("Seleccion");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Pedido", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Estadia", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("EstadiaId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.EstadoPreparacion", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Mozo", "Mozo")
                        .WithMany()
                        .HasForeignKey("MozoId");

                    b.Navigation("Cliente");

                    b.Navigation("Estado");

                    b.Navigation("Mesa");

                    b.Navigation("Mozo");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.RestriccionAlimentaria", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Bebida", null)
                        .WithMany("RestriccionesAlimentarias")
                        .HasForeignKey("BebidaId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Plato", null)
                        .WithMany("RestriccionesAlimentarias")
                        .HasForeignKey("PlatoId");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Seleccion", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.EstadoPreparacion", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Pedido", "Pedido")
                        .WithMany("Selecciones")
                        .HasForeignKey("PedidoId");

                    b.Navigation("Estado");

                    b.Navigation("Item");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.TurnoMozo", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Mozo", "Mozo")
                        .WithMany()
                        .HasForeignKey("MozoId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId");

                    b.Navigation("Mozo");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Bebida", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Item", null)
                        .WithOne()
                        .HasForeignKey("CAECE.JL.Unter.Server.Datos.Bebida", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Ingrediente", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Item", null)
                        .WithOne()
                        .HasForeignKey("CAECE.JL.Unter.Server.Datos.Ingrediente", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Plato", b =>
                {
                    b.HasOne("CAECE.JL.Unter.Server.Datos.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("CAECE.JL.Unter.Server.Datos.Item", null)
                        .WithOne()
                        .HasForeignKey("CAECE.JL.Unter.Server.Datos.Plato", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Estadia", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Item", b =>
                {
                    b.Navigation("Componentes");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Pedido", b =>
                {
                    b.Navigation("Selecciones");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Seleccion", b =>
                {
                    b.Navigation("Agregar");

                    b.Navigation("Sacar");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Bebida", b =>
                {
                    b.Navigation("RestriccionesAlimentarias");
                });

            modelBuilder.Entity("CAECE.JL.Unter.Server.Datos.Plato", b =>
                {
                    b.Navigation("PosiblesExtras");

                    b.Navigation("RestriccionesAlimentarias");
                });
#pragma warning restore 612, 618
        }
    }
}
